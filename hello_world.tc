// This is a sample really tiny C program.
// Double slash to end of line is a comment character (like C).
// It borrows from C and assembler syntax, but doesn't support a stack.
// The reason is that many eight bit micros don't have stack addressing.
// It does support lexical scope which is used to create control structures.

// This line defines a label and declares storage for a string.
const char * hello_world = "Hello World\n";

// These lines declare two byte variables which should use a register.
register char a
register char x

// Defines a label and a lexical scope.
void strout: {
    // Initialize x and a.
    x = 0
    a = *(hello_world + x)

    // process each charater, and advance to the nest.
    while (a == 0) {
        gosub cout
        x++
        a = *(hello_world + x)
    }
}

// The main label is the entry point for the program
main: {
    gosub strout
    break
}
